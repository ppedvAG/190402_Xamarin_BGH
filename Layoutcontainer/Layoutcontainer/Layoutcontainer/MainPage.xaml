<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:Layoutcontainer"
             x:Class="Layoutcontainer.MainPage"
             BackgroundColor="#127AC7">
    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Double x:Key="meineZahl">60</x:Double>
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- HorizontalOptions + VerticalOptions 
         
    Layoutcontainer: Start/Center/End/Fill
    Elemente IM Container: StartAndExpand/CenterAndExpand ...
    
    -->
    <!--<StackLayout BackgroundColor="Lavender"
                 Orientation="Vertical"
                 Spacing="0">
        <Button Text="Button 1"/>
        <Button Text="Button 2"/>
        <BoxView BackgroundColor="Orange"
                 VerticalOptions="FillAndExpand"/>
        <Button Text="Button 3"/>
    </StackLayout>-->

    <!--<StackLayout VerticalOptions="Center">
        <Label Text="Welcome to Xamarin" FontSize="30" FontAttributes="Bold"
               HorizontalOptions="Center"
               BackgroundColor="Orange"/>
        <Label Text="Cross-platform apps made easy"
               HorizontalTextAlignment="Center"
               BackgroundColor="Orange"/>
        <Button Text="Login"/>
        <Button Text="Register"/>
    </StackLayout>-->

    <!--<Grid BackgroundColor="Gold"
          ColumnSpacing="0"
          RowSpacing="0">

        <BoxView Grid.Row="0" BackgroundColor="YellowGreen"/>
        <BoxView Grid.Row="1" BackgroundColor="MediumSpringGreen"/>
        <BoxView Grid.Row="4" BackgroundColor="LimeGreen"/>

        <StackLayout
            Grid.Row="1" Grid.RowSpan="3"
            Grid.Column="1" Grid.ColumnSpan="2" BackgroundColor="ForestGreen">
            <Button Text="abcde"/>
            <Button Text="abcde"/>
            <Button Text="abcde"/>
            <Button Text="abcde"/>
            <Button Text="abcde"/>
        </StackLayout>

    </Grid>-->

    <!-- Sonderwerte für Columndefinition und RowDefinition: -->
    <!-- * -> "Alles (anteilig, zb 1* und 2*)" -->
    <!-- Auto -> Größe hängt vom Größten Element ab: "nur das, was man braucht" -->
    <!-- Margin  => Aussenabstand-->
    <!-- Padding => Innenabstand-->
    <!-- Werte: "links,oben,rechts,unten"-->
    <!-- Werte: "linksrechts,obenunten"-->
    <!-- Werte: "alles"-->

    <!--<Grid BackgroundColor="YellowGreen"
          RowSpacing="20"
          Padding="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        
        <Entry Grid.Row="0" Grid.Column="0" Placeholder="Suchtext"/>
        <Button Grid.Row="0" Grid.Column="1" Text="Suchen !"/>
        <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BackgroundColor="LightBlue"/>

    </Grid>-->

    <!--<Grid BackgroundColor="Black"
          Padding="40"
          RowSpacing="10"
          ColumnSpacing="10">
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
               Text="1234"
               FontAttributes="Bold"
               TextColor="White"
               FontSize="40"
               HorizontalOptions="Center"/>

        <Grid.Resources>
            <ResourceDictionary>
                <x:Double x:Key="meineZahl"> 40 </x:Double>

                --><!-- Expliziter Style-->
                <!-- Vererbung mithilfe von BasedOn--><!--
                <Style TargetType="Button" x:Key="specialButtonStyle">
                    <Setter Property="BackgroundColor" Value="Gainsboro"/>
                    <Setter Property="TextColor" Value="DarkGray"/>
                    <Setter Property="FontSize" Value="{StaticResource meineZahl}"/>
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>

                --><!-- Impliziter Style-->
                <!-- Gilt automatisch für alle Buttons--><!--
                <Style TargetType="Button">
                    <Setter Property="BackgroundColor" Value="LemonChiffon"/>
                    <Setter Property="TextColor" Value="CadetBlue"/>
                    <Setter Property="FontSize" Value="{StaticResource meineZahl}"/>
                </Style>


            </ResourceDictionary>
        </Grid.Resources>


        <Button Grid.Row="1" Grid.Column="0" Text="1" BorderRadius="30" BackgroundColor="Orange" TextColor="Black" FontSize="{StaticResource meineZahl}"/>
        <Button Grid.Row="1" Grid.Column="1" Text="2" BorderRadius="30" BackgroundColor="Orange" TextColor="Black" FontSize="{StaticResource meineZahl}"/>
        <Button Grid.Row="1" Grid.Column="2" Text="3" BorderRadius="30" BackgroundColor="Orange" TextColor="Black" FontSize="{StaticResource meineZahl}"/>
        <Button Grid.Row="2" Grid.Column="0" Text="4" Style="{StaticResource specialButtonStyle}" />
        <Button Grid.Row="2" Grid.Column="1" Text="5" Style="{StaticResource specialButtonStyle}"/>
        <Button Grid.Row="2" Grid.Column="2" Text="6" Style="{StaticResource specialButtonStyle}"/>
        <Button Grid.Row="3" Grid.Column="0" Text="7" />
        <Button Grid.Row="3" Grid.Column="1" Text="8" />
        <Button Grid.Row="3" Grid.Column="2" Text="9" />
        <Button Grid.Row="4" Grid.Column="1" Text="0" BorderRadius="30" TextColor="Black" FontSize="25"/>
        <Button Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Text="Dial" BorderRadius="30" BackgroundColor="Green" TextColor="Black" FontSize="25"/>
    </Grid>-->


    <!-- AbsoluteLayout-->
    <!-- AbsoluteLayout.LayoutBounds="X,Y,width,height"-->
    <!-- Proportional (zwischen 0 und 1) mit AbsolueLayout.LayoutFlags-->
    <!-- Achtung: Position fängt nicht bei "0.333" an, sondern verteilt die Höhe ab diesem Punkt gleichmäßig rauf und runter-->
    <!-- Trick: Y auf 1 setzen damit nur noch in eine Richtung die höhe gesetzt werden kann-->

    <!--<AbsoluteLayout BackgroundColor="LightGreen">

        <BoxView BackgroundColor="LightCyan" 
                 AbsoluteLayout.LayoutBounds="0,0,1,0.333"
                 AbsoluteLayout.LayoutFlags="SizeProportional"/>

        <BoxView BackgroundColor="LightGoldenrodYellow"
                 AbsoluteLayout.LayoutBounds="50,50,100,100"/>

        <BoxView BackgroundColor="MediumBlue"
                 AbsoluteLayout.LayoutBounds="80,80,100,100"/>

        <BoxView BackgroundColor="SkyBlue" 
                 AbsoluteLayout.LayoutBounds="0,1,1,0.667"
                 AbsoluteLayout.LayoutFlags="All"/>

    </AbsoluteLayout>-->

    
    
    <RelativeLayout BackgroundColor="Maroon">
        <BoxView x:Name="boxViewHeader" BackgroundColor="Plum"
                 RelativeLayout.WidthConstraint="{ConstraintExpression
                                Type=RelativeToParent,
                                Property=Width,
                                Factor=1}"
                 RelativeLayout.HeightConstraint="{ConstraintExpression
                                Type=RelativeToParent,
                                Property=Height,
                                Factor=0.333}"/>

        <BoxView BackgroundColor="DarkGreen" HeightRequest="100" WidthRequest="100"
                 RelativeLayout.XConstraint="{ConstraintExpression
                                Type=RelativeToView,
                                ElementName=boxViewHeader,
                                Property=Width,
                                Factor=0.5,
                                Constant=-50}"
                 RelativeLayout.YConstraint="{ConstraintExpression
                                Type=RelativeToView,
                                ElementName=boxViewHeader,
                                Property=Height,
                                Factor=1,
                                Constant=-50}"/>
    </RelativeLayout>


</ContentPage>
